# -*- coding: utf-8 -*-
"""
This code is for extracting daily simulation results from WEPP
The output file name is grph#.txt
"""

import numpy as np
import pandas as pd

# road unique grid_codes
unique_code = np.load('_NT80_v.npy')
unique_code = np.sort(unique_code)

grid_size = 300 #meter

# Extract only headers and simulations results
header = pd.read_csv('00_header_grph.txt',header = None)

header.columns = ["v"]

# row = number of simulation, column = number of catchment+1
all_sub_sed = np.zeros([14245,len(unique_code)+1])
j = 0
for i in unique_code :
#for i in range(1) :

    grph = pd.read_csv('grph_'+str(i)+'.txt', skiprows=[i for i in range(0,121)], \
                        header = None, delim_whitespace=True,dtype = {'8' :np.float})

    grph.columns = [header.v]
    
    """
    Extract only specific columns
    0 = simulation days,  8 = sediment leaving profile [kg/m]
    cf) 1 = precipitation [mm] -> check the order of "header" to extract more variables
    Since unit of sediment is in kg/m -> multiplying the width of hillslope will be in kg.
    """
    
    daily = grph.iloc[:-5,[0,8]] # drop last 5 rows (max, min, etc) and pick specific columns from grph
    daily.columns = ["day","sediment"]
    daily["Temp"] = daily["sediment"].convert_objects(convert_numeric=True)
    #    daily.sediment_kg = daily.sediment * width[0]
    
    sediment = daily.Temp.values 
    all_sub_sed[:,0] = daily.day.values
#    all_sub_sed[:,i+1] = sediment *  width[i]
    all_sub_sed[:,j+1] = sediment*  grid_size
    j = j+1
    
# the array "all_sub_sed" is time series data for MIKE SHE
grph.to_csv('grph.csv') # last subcatchment results just to check
