# -*- coding: utf-8 -*-
"""
Created on Fri Feb 22 11:05:28 2019

@author: slee589
"""

import numpy as np
import os

""" Slope section
# format for numerical values : [Catchment ID, Area [m2], Slope [fraction], length[m], width[m]] """
#slope_arcswat = "slope_WEPP_input.txt"
#topo = np.loadtxt(slope_arcswat)
#size_grid = 300 # meter

# make input file for uniform slope
#for i in range(len(topo)) :
#    f = open("slope"+str(i+1)+".slp","w")
#    f.write("97.5 \n") 
#    f.write("1 \n")
#    f.write("180.000 \t" + str(size_grid) +  "\n") # assign width
#    f.write("2 \t" + str(size_grid) +  "\n") # assign slope length
#    f.write("0.000000, "+ '%.6f' % topo[i,2] + " 1.000000, " + '%.6f' % topo[i,2]) # assign an uniform slope     
#    f.close() 

# need to develop code for soil, management and climate

# road unique grid_codes
unique_code = np.load('Fisher_grids\_NT80_v.npy')

# make run file for each grid
for i in unique_code :
    f = open("run"+str(i)+".run","w")
    f.write("M \n") # Metric units selected
    f.write("Yes \n") # Enter N to run watershed option (not a SHELL option).
    f.write("1 \n") # 1 - continuous simulation
    f.write("1 \n") #1 - hillslope version (single hillslope only)
    f.write("No \n") #Do you want hillslope pass file output (Y/N)?
    """
     ---- ---- ------ ------- --- ---------- ----------
 [1] - Abbreviated annual
  2  - Detailed annual
  3  - Abbreviated event by event
  4  - Detailed event by event
  5  - Monthly 
 options for below--------------------------------------
    """
    f.write("5 \n") # Soil loss output options for continuous simulation (5 - monthly)
    f.write("No \n") # Do you want initial condition scenario output (Y/N)?
    f.write("..\output\loss_" + str(i)+".txt \n") #Enter file name for soil loss output --> 
    f.write("Yes \n") # Do you want water balance output (Y/N)?
    f.write("..\output\WB_" + str(i)+".txt \n")  # Enter file name for water balance output
    f.write("No \n") # Do you want crop output (Y/N)?
    f.write("No \n") # Do you want soil output (Y/N)?
    f.write("Yes \n") # Do you want distance and sediment loss output (Y/N)?
    f.write("..\output\plot_" + str(i)+".txt \n") # Enter file name for plotting output
    f.write("Yes \n") # Do you want large graphics output (Y/N)?
    f.write("..\output\grph_" + str(i)+".txt \n") # Enter file name for large graphics output
    f.write("No \n") # Do you want event by event output (Y/N)? 
    f.write("No \n") # Do you want element output (Y/N)
    f.write("Yes \n") # Do you want final summary output (Y/N)?
    f.write("..\output\summary_" + str(i)+".txt \n")
    f.write("No \n") # Do you want daily winter output (Y/N)?
    f.write("No \n") # Do you want plant yield output (Y/N)?
    
    code = i
    code = str(code)    
    # assign management / land use
    if code[3] == str(1) and code[4] == str(1):
        f.write("Fisher_grids\management\corn_no_till.man \n")
    elif code[3] == str(1) and code[4] == str(2):
        f.write("Fisher_grids\management\corn_mulch.man \n")
    elif code[3] == str(1) and code[4] == str(3):
        f.write("Fisher_grids\management\corn_reduced.man \n")
    elif code[3] == str(1) and code[4] == str(4):
        f.write("Fisher_grids\management\corn_conventional.man \n")
    elif code[3] == str(2) and code[4] == str(1):
        f.write("Fisher_grids\management\soybean_no_till.man \n")
    elif code[3] == str(2) and code[4] == str(2):
        f.write("Fisher_grids\management\soybean_mulch.man \n")
    elif code[3] == str(2) and code[4] == str(3):
        f.write("Fisher_grids\management\soybean_reduced.man \n")
    elif code[3] == str(2) and code[4] == str(4):
        f.write("Fisher_grids\management\soybean_conventional.man \n")
    elif code[3] == str(4) and code[4] == str(1):
        f.write("Fisher_grids\management\grass.man \n")
    elif code[3] == str(5) and code[4] == str(1):
        f.write("Fisher_grids\management\l_forest.man \n")
    elif code[3] == str(6) and code[4] == str(1):
        f.write("Fisher_grids\management\winter_wheat.man \n")
    
    # assign slope
    if code[1] == str(1) :
        f.write("Fisher_grids\slope_1.slp \n")
    elif code[1] == str(2) :
        f.write("Fisher_grids\slope_2.slp \n")
    elif code[1] == str(3) :
        f.write("Fisher_grids\slope_3.slp \n")
    elif code[1] == str(4) :
        f.write("Fisher_grids\slope_4.slp \n")

    # Assign climate
    if code[2] == str(0) :
        f.write("Normal.CLI \n")
    elif code[2] == str(1) :
        f.write("rantoul_1.CLI \n")
        
    # assign soil 
    if code[0] == str(1) :
        f.write("Fisher_grids\soil\soil1.sol \n") # soil input
    elif code[0] == str(2) :
        f.write("Fisher_grids\soil\soil2.sol \n") # soil input
    elif code[0] == str(3) :
        f.write("Fisher_grids\soil\soil3.sol \n") # soil input
    elif code[0] == str(4) :
        f.write("Fisher_grids\soil\soil4.sol \n") # soil input
    f.write("0 \n") # [0] no irrigation
    f.write("39 \n") # simulation years
    f.write("0 \n") # To bypass erosion calculations for very small events, enter 1
    f.close() 

# batch file
f = open("weppbat_SH.bat","w")
f.write("@echo off \n")
for i in unique_code :
    f.write('"C:\WEPP\wepp\wepp.exe" '+ '< run'+str(i)+'.run > run'+str(i)+'.err \n')
f.write("@cls \n")
f.close()     

# run the batch file
os.system(r"C:\WEPP\runs\weppbat_SH.bat")

